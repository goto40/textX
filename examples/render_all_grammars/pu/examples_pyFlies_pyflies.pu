@startuml
set namespaceSeparator .


class pyflies.PyFliesModel  {
  STRING name
  STRING description
  STRING basepath
}


class pyflies.BlockType <<abstract>> {
}


class pyflies.TestType  {
  ID name
}


class pyflies.Conditions  {
  list[WORD] varNames
}


class pyflies.Condition  {
  list[WORD] varValues
}


class pyflies.Stimuli  {
  INT dmin
  INT dmax
}


class pyflies.ConditionStimuli  {
}


class pyflies.ConditionMatch  {
}


class pyflies.ConditionMatchExpression <<abstract>> {
}


class pyflies.FixedCondition  {
  FixedConditionEnum expression
}


class pyflies.FixedConditionEnum <<match>> {
}


class pyflies.OrdinalCondition  {
  INT expression
}


class pyflies.ExpressionCondition  {
}


class pyflies.OrExpression  {
}


class pyflies.AndExpression  {
}


class pyflies.NotEqualsExpression <<abstract>> {
}


class pyflies.NotExpression  {
}


class pyflies.EqualsExpression  {
  WORD varName
  WORD varValue
}


class pyflies.Stimulus <<abstract>> {
}


class pyflies.Image  {
  STRING file
  optional<list[WORD]> x
  optional<list[INT]> y
  optional<list[WORD]> dmin
  optional<list[INT]> dmax
  optional<list[WORD]> width
  optional<list[INT]> height
}


class pyflies.Shape  {
  ShapeType shape
  optional<list[WORD]> x
  optional<list[INT]> y
  optional<list[WORD]> dmin
  optional<list[INT]> dmax
  optional<list[WORD]> width
  optional<list[INT]> height
  optional<list[WORD]> color
  optional<list[WORD]> fillcolor
  optional<list[WORD]> lineWidth
}


class pyflies.ShapeType <<match>> {
}


class pyflies.Text  {
  TextType text
  optional<list[WORD]> x
  optional<list[INT]> y
  optional<list[WORD]> dmin
  optional<list[INT]> dmax
  optional<list[WORD]> width
  optional<list[INT]> height
  optional<list[WORD]> color
}


class pyflies.TextType <<match>> {
}


class pyflies.WORD <<match>> {
}


class pyflies.Sound  {
  INT frequency
  WORD dmin
  INT dmax
}


class pyflies.Audio  {
  STRING file
  WORD dmin
  INT dmax
}


class pyflies.Block <<abstract>> {
}


class pyflies.TestInstance  {
  INT trials
  optional<BOOL> practice
  optional<BOOL> randomize
}


class pyflies.ScreenInstance  {
}


class pyflies.SubjectInstance  {
}


class pyflies.Reference <<abstract>> {
}


class pyflies.StructureElement <<abstract>> {
}


class pyflies.Structure  {
}


class pyflies.Sequence  {
}


class pyflies.Randomize  {
}


class pyflies.ScreenType  {
  ID name
  STRING content
}


class pyflies.SubjectType  {
  ID name
}


class pyflies.SubjectAttribute  {
  ID name
  STRING label
}


class pyflies.SubjectAttributeType <<abstract>> {
}


class pyflies.Enum  {
  list[ID] values
}


class pyflies.Target  {
  ID name
  STRING output
}


class pyflies.TargetParam  {
  ID name
  BASETYPE value
}


class pyflies.ResponseMap  {
  ID name
  BASETYPE target
}


class pyflies.Comment <<match>> {
}


class ID <<match>> {
}


class STRING <<match>> {
}


class BOOL <<match>> {
}


class INT <<match>> {
}


class FLOAT <<match>> {
}


class STRICTFLOAT <<match>> {
}


class NUMBER <<match>> {
}


class BASETYPE <<match>> {
}


class OBJECT <<abstract>> {
}


pyflies.PyFliesModel *-- "1..*" pyflies.BlockType
pyflies.PyFliesModel *-- pyflies.Structure
pyflies.PyFliesModel *-- "0..*" pyflies.Target
pyflies.BlockType <|-- pyflies.TestType
pyflies.BlockType <|-- pyflies.ScreenType
pyflies.BlockType <|-- pyflies.SubjectType
pyflies.TestType *-- pyflies.Conditions
pyflies.TestType *-- pyflies.Stimuli
pyflies.Conditions *-- "1..*" pyflies.Condition
pyflies.Stimuli *-- "1..*" pyflies.ConditionStimuli
pyflies.ConditionStimuli *-- pyflies.ConditionMatch
pyflies.ConditionStimuli *-- "1..*" pyflies.Stimulus
pyflies.ConditionMatch *-- pyflies.ConditionMatchExpression
pyflies.ConditionMatchExpression <|-- pyflies.FixedCondition
pyflies.ConditionMatchExpression <|-- pyflies.OrdinalCondition
pyflies.ConditionMatchExpression <|-- pyflies.ExpressionCondition
pyflies.ExpressionCondition *-- pyflies.OrExpression
pyflies.OrExpression *-- "0..*" pyflies.AndExpression
pyflies.AndExpression *-- "0..*" pyflies.NotEqualsExpression
pyflies.NotEqualsExpression <|-- pyflies.NotExpression
pyflies.NotEqualsExpression <|-- pyflies.EqualsExpression
pyflies.NotExpression *-- pyflies.EqualsExpression
pyflies.Stimulus <|-- pyflies.Image
pyflies.Stimulus <|-- pyflies.Shape
pyflies.Stimulus <|-- pyflies.Sound
pyflies.Stimulus <|-- pyflies.Audio
pyflies.Stimulus <|-- pyflies.Text
pyflies.Block <|-- pyflies.Sequence
pyflies.Block <|-- pyflies.Randomize
pyflies.TestInstance o-- pyflies.TestType
pyflies.ScreenInstance o-- pyflies.ScreenType
pyflies.SubjectInstance o-- pyflies.SubjectType
pyflies.Reference <|-- pyflies.TestInstance
pyflies.Reference <|-- pyflies.ScreenInstance
pyflies.Reference <|-- pyflies.SubjectInstance
pyflies.StructureElement <|-- pyflies.Reference
pyflies.StructureElement <|-- pyflies.Block
pyflies.Structure *-- "0..*" pyflies.StructureElement
pyflies.Sequence *-- "0..*" pyflies.StructureElement
pyflies.Randomize *-- "0..*" pyflies.StructureElement
pyflies.SubjectType *-- "1..*" pyflies.SubjectAttribute
pyflies.SubjectAttribute *-- pyflies.SubjectAttributeType
pyflies.SubjectAttributeType <|-- pyflies.Enum
pyflies.Target *-- "0..*" pyflies.ResponseMap
pyflies.Target *-- "0..*" pyflies.TargetParam
NUMBER <|-- STRICTFLOAT
NUMBER <|-- INT
BASETYPE <|-- NUMBER
BASETYPE <|-- FLOAT
BASETYPE <|-- BOOL
BASETYPE <|-- ID
BASETYPE <|-- STRING
OBJECT <|-- BASETYPE
@enduml
